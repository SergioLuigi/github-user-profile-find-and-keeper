plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
}


sourceSets {
    integration {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
    }
}

group = 'br.com.sergioluigi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    integrationImplementation.extendsFrom(testImplementation)
    integrationRuntimeOnly.extendsFrom(testRuntimeOnly)
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar {
    manifest {
        attributes "Main-Class": "br.com.sergioluigi.githubuserprofilefindandkeeper.GitHubUserProfileFindAndKeeperApplication"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.1")
    set('testcontainersVersion', "1.17.6")
}

dependencies {
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework:spring-jdbc'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.postgresql:r2dbc-postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.mock-server:mockserver-spring-test-listener:5.15.0'
    testImplementation 'com.squareup.okhttp3:okhttp:4.10.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:r2dbc'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test', Test) {
    useJUnitPlatform()
}
